{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Searchbar/Searchbar.jsx","utils/pixabayAPI.js","components/Button/Button.jsx","components/Modal/Modal.jsx","components/Loader/Loader.jsx","App.js","index.js"],"names":["useStyles","createUseStyles","ImageGalleryItem","borderRadius","boxShadow","ImageGalleryItemImage","width","height","objectFit","transition","transform","cursor","url","titel","onClick","urlBigImage","onUrlImageModal","classes","className","src","alt","ImageGallery","display","maxWidth","gridTemplateColumns","gridGap","marginTop","marginBottom","padding","listStyle","marginLeft","marginRight","imageList","map","image","webformatURL","type","largeImageURL","id","Searchbar","top","left","position","zIndex","justifyContent","alignItems","minHeight","paddingRight","paddingLeft","paddingTop","paddingBottom","color","backgroundColor","SearchForm","overflow","SearchFormButton","border","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","opacity","outline","SearchFormButtonLabel","clip","whiteSpace","clipPath","SearchFormInput","font","fontSize","onSubmit","useState","search","setSearch","e","preventDefault","placeholder","onChange","target","value","axios","defaults","baseURL","params","key","image_type","orientation","per_page","getImages","query","page","get","then","data","propTypes","PropTypes","string","isRequired","number","ButtonAddPage","margin","textAlign","Button","onButton","backdrop","modal","maxHeight","modalRoot","document","querySelector","Modal","children","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","currentTarget","Loader","loading","css","size","App","setImageList","setQuery","setPage","showModal","setShowModal","urlImage","setUrlImage","setLoading","fetchImages","result","prevState","hits","catch","error","console","log","message","finally","length","scrollTo","documentElement","scrollHeight","behavior","toggleModal","urlImageModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd007ee3.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = createUseStyles({\r\n  ImageGalleryItem: {\r\n    borderRadius: '2px',\r\n    boxShadow: [\r\n      '0px 1px 3px 0px rgba(0, 0, 0, 0.2)',\r\n      '0px 1px 1px 0px rgba(0, 0, 0, 0.14)',\r\n      '0px 2px 1px -1px rgba(0, 0, 0, 0.12)',\r\n    ],\r\n  },\r\n\r\n  ImageGalleryItemImage: {\r\n    width: '100%',\r\n    height: '260px',\r\n    objectFit: 'cover',\r\n    transition: 'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)',\r\n    '&:hover': {\r\n      transform: 'scale(1.03)',\r\n      cursor: 'zoom-in',\r\n    },\r\n  },\r\n});\r\n\r\nconst ImageGalleryItem = ({\r\n  url,\r\n  titel,\r\n  onClick,\r\n  urlBigImage,\r\n  onUrlImageModal,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleClick = () => {\r\n    onClick();\r\n    onUrlImageModal(urlBigImage);\r\n  };\r\n\r\n  return (\r\n    <li className={classes.ImageGalleryItem} onClick={handleClick}>\r\n      <img\r\n        src={url}\r\n        alt={titel}\r\n        className={classes.ImageGalleryItemImage}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\n  ImageGalleryItem.propTypes = {\r\n    url: PropTypes.string.isRequired,\r\n    titel: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    urlBigImage: PropTypes.string.isRequired,\r\n    onUrlImageModal: PropTypes.func.isRequired,\r\n  };\r\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport { createUseStyles } from 'react-jss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = createUseStyles({\r\n  ImageGallery: {\r\n    display: 'grid',\r\n    maxWidth: 'calc(100vw - 48px)',\r\n    gridTemplateColumns: 'repeat(auto-fill, minmax(320px, 1fr))',\r\n    gridGap: '16px',\r\n    marginTop: 0,\r\n    marginBottom: 0,\r\n    padding: 0,\r\n    listStyle: 'none',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n});\r\n\r\nconst ImageGallery = ({ imageList, onClick, onUrlImageModal }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ul className={classes.ImageGallery}>\r\n      {imageList.map(image => (\r\n        <ImageGalleryItem\r\n          url={image.webformatURL}\r\n          titel={image.type}\r\n          key={image.id}\r\n          onClick={onClick}\r\n          urlBigImage={image.largeImageURL}\r\n          onUrlImageModal={onUrlImageModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\n  ImageGallery.propTypes = {\r\n    imageList: PropTypes.array.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    onUrlImageModal: PropTypes.func.isRequired,\r\n  };\r\n","import { useState } from 'react';\r\nimport { createUseStyles } from \"react-jss\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst useStyles = createUseStyles({\r\n  Searchbar: {\r\n    top: \"0\",\r\n    left: \"0\",\r\n    position: \"sticky\",\r\n    zIndex: \"1100\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"64px\",\r\n    paddingRight: \"24px\",\r\n    paddingLeft: \"24px\",\r\n    paddingTop: \"12px\",\r\n    paddingBottom: \"12px\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#3f51b5\",\r\n    boxShadow:\r\n      \"0px 2px 4px -1px rgba(0, 0, 0, 0.2) 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12)\",\r\n  },\r\n\r\n  SearchForm: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    maxWidth: \"600px\",\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: \"3px\",\r\n    overflow: \"hidden\",\r\n  },\r\n\r\n  SearchFormButton: {\r\n    display: \"inlineBlock\",\r\n    width: \"48px\",\r\n    height: \"48px\",\r\n    border: \"0\",\r\n    backgroundImage:\r\n      \"url('https://image.flaticon.com/icons/svg/149/149852.svg')\",\r\n    backgroundSize: \"40%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    opacity: \"0.6\",\r\n    transition: \"opacity 250ms cubic-bezier(0.4, 0, 0.2, 1)\",\r\n    cursor: \"pointer\",\r\n    outline: \"none\",\r\n    \"&:hover\": { opacity: \"1\" },\r\n  },\r\n\r\n  SearchFormButtonLabel: {\r\n    position: \"absolute\",\r\n    width: \"1px\",\r\n    height: \"1px\",\r\n    padding: \"0\",\r\n    overflow: \"hidden\",\r\n    clip: \"rect(0, 0, 0, 0)\",\r\n    whiteSpace: \"nowrap\",\r\n    clipPath: \"inset(50%)\",\r\n    border: \"0\",\r\n  },\r\n\r\n  SearchFormInput: {\r\n    display: \"inline-block\",\r\n    width: \"100%\",\r\n    font: \"inherit\",\r\n    fontSize: \"20px\",\r\n    border: \"none\",\r\n    outline: \"none\",\r\n    paddingLeft: \"4px\",\r\n    paddingRight: \"4px\",\r\n    \"&::placeholder\": {\r\n      font: \"inherit\",\r\n      fontSize: \"18px\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Searchbar = ({onSubmit}) => {\r\n  const [search, setSearch] = useState('');\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleSearc = e => setSearch(e.target.value);\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n      onSubmit(search);\r\n  }\r\n  return (\r\n    <header className={classes.Searchbar}>\r\n      <form className={classes.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={classes.SearchFormButton}>\r\n          <span className={classes.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={classes.SearchFormInput}\r\n          type=\"text\"\r\n          // autocomplete=\"off\"\r\n          // autofocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleSearc}\r\n          value={search}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n\r\n  Searchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n","import axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '19750325-769cba3e08dc3fabd5e207521';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  key: API_KEY,\r\n  image_type: 'photo',\r\n  orientation: 'horizontal',\r\n  per_page: 12,\r\n};\r\n\r\nexport const getImages = (query, page) =>\r\n  axios.get(`?q=${query}&page=${page}`).then(({ data }) => data);\r\n\r\n\r\n  getImages.propTypes = {\r\n    query: PropTypes.string.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n  };\r\n","import { createUseStyles } from 'react-jss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = createUseStyles({\r\n  ButtonAddPage: {\r\n    width: '140px',\r\n    height: '48px',\r\n    margin: 'auto',\r\n    font: 'inherit',\r\n    fontSize: '20px',\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    backgroundColor: '#3f51b5',\r\n    borderRadius: '3px',\r\n    boxShadow:\r\n      '0px 2px 4px -1px rgba(0, 0, 0, 0.2) 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12)',\r\n    border: '0',\r\n    opacity: '1',\r\n    transition: 'opacity 250ms cubic-bezier(0.4, 0, 0.2, 1)',\r\n    cursor: 'pointer',\r\n    outline: 'none',\r\n    '&:hover': { opacity: '0.6' },\r\n  },\r\n});\r\n\r\nconst Button = ({ onButton }) => {\r\n  const classes = useStyles();\r\n  const handleButton = () => onButton();\r\n\r\n  return (\r\n    <button\r\n      onClick={handleButton}\r\n      type=\"button\"\r\n      className={classes.ButtonAddPage}\r\n    >\r\n      <span>Load more</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\n  Button.propTypes = {\r\n    onButton: PropTypes.func.isRequired,\r\n  };","import { useEffect } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = createUseStyles({\r\n  backdrop: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n    zIndex: 1200,\r\n  },\r\n  modal: {\r\n    maxWidth: 'calc(100vw - 48px)',\r\n    maxHeight: 'calc(100vh - 24px)',\r\n  },\r\n});\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst Modal = ({ children, onClose }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleOnClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [Modal]);\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      handleOnClose();\r\n    }\r\n  };\r\n  return createPortal(\r\n    <div className={classes.backdrop} onClick={handleBackdropClick}>\r\n      <div className={classes.modal}>{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\n  Modal.propTypes = {\r\n    children: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n  };\r\n","import RingLoader from 'react-spinners/RingLoader';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Loader = ({ color, loading }) => {\r\n  return (\r\n    <RingLoader\r\n      color={color}\r\n      loading={loading}\r\n      css={{\r\n        position: 'fixed',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%,-50%)',\r\n      }}\r\n      size={80}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n\r\n  Loader.propTypes = {\r\n    color: PropTypes.string.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n  };","import './App.css';\nimport { useState, useEffect } from 'react';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport { getImages } from './utils/pixabayAPI';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport Loader from './components/Loader/Loader';\n\n\nfunction App() {\n  const [imageList, setImageList] = useState([]);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [urlImage, setUrlImage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [color, setColor] = useState('#3f51b5');\n\n  const handleFormSubmit = search => {\n    setImageList([]);\n    setQuery(search);\n    // setImageList(() => setImageList([]));\n    setPage(1);\n  };\n\n  const handleAddPage = () => {\n    fetchImages();\n    // setPage(page + 1);\n    // setImageList(prevState => [...prevState, ...imageList]);\n  };\n\n  const fetchImages = () => {\n    setLoading(true);\n    getImages(query, page)\n      .then(result => {\n        setImageList(prevState => [...prevState, ...result.hits]);\n        setPage(page + 1);\n      })\n      .catch(error => console.log(error.message))\n      .finally(() => setLoading(false));\n\n  };\n\n  useEffect(() => {\n    if (query !== '') {\n      // getImages(query, page)\n      //   .then(result => setImageList(result.hits))\n      //   .catch(error => console.log(error.message));\n      fetchImages();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    if (imageList.length > 12) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }, [imageList]);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const handleUrlImage = urlImageModal => {\n    setUrlImage(urlImageModal);\n  };\n  return (\n    <div className=\"App\">\n      <Loader color={color} loading={loading} />\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageGallery\n        imageList={imageList}\n        onClick={toggleModal}\n        onUrlImageModal={handleUrlImage}\n      />\n      {imageList.length > 0 && <Button onButton={handleAddPage} />}\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <img src={urlImage} alt=\"photo\" />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}